#!/bin/bash

# MIT License

# Copyright (C) 2019, Entynetproject. All Rights Reserved.

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

if [[ -d /System/Library/CoreServices/Finder.app ]]
then
#blue start 
	BS="-e \033[34m"
#color end
	CE="\033[0m"
#red start
	RS="-e \033[31m"
#green start
	GNS="-e \033[32m"
else
#blue start 
	BS="-e \e[0;34m"
#color end
	CE="\e[0m"
#red start
	RS="-e \e[0;31m"
#green start
	GNS="-e \e[0;32m"
fi

printf '\033]2;Copycat Toolkit\a'

{
SED="$( cat ~/.shodan/api_key )"
} &> /dev/null
if [[ "$SED" != "PSKINdQe1GyxGgecYz2191H2JoS9qvgD" ]]
then 
{
rm ~/.shodan/api_key
echo PSKINdQe1GyxGgecYz2191H2JoS9qvgD >> ~/.shodan/api_key
} &> /dev/null
fi

if [[ "$1" = "help" ]]
then
if [[ -f /usr/local/bin/shodan ]]
then
sleep 0.5
     if [[ -f ~/.shodan/api_key ]]
     then
     sleep 0.5
     else
     sleep 0.5
     SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
     {
     shodan init "$SHO"
     } &> /dev/null
     fi
else
     sleep 0.5
     {
     pip install setuptools
     pip uninstall shodan -y
     pip install shodan
     } &> /dev/null
sleep 0.5
SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
{
shodan init "$SHO"
} &> /dev/null
fi
sleep 1
echo
cat banner/banner.txt            
echo
echo  "Usage: copycat [OPTION...] <arguments...>"
echo  "Copyright (C) 2019, Entynetproject. All Rights Reserved."
echo 
echo  "   host     <host>                Show all available information for an IP."
echo  "   honeypot <host>                Check whether the IP is a honeypot or not."
echo  "   download <request> <filename>  Download search results as JSON database."
echo  "   parse    <format> <filename>   Extract information out of compressed JSON."
echo  "   stats    <request>             Provide summary information about a search."                 
echo  "   search   <request>             Search the Internet database from Copycat."
echo  "   domain   <domain>              Show all available information for a domain."
echo  "   stream                         Stream Copycat search results in real-time."
echo  "   radar                          The real-time map of Copycat search results."
echo  "   update                         Update Copycat Toolkit and API configuration."
echo  "   help                           Show all available Copycat Toolkit options."
echo    
exit

elif [[ "$1" = "host" ]]
then
if [[ $2 = "" ]]
then
echo -e "Usage: copycat $1 <host>"
exit
fi
if [[ -f /usr/local/bin/shodan ]]
then
sleep 0.5
     if [[ -f ~/.shodan/api_key ]]
     then
     sleep 0.5
     else
     sleep 0.5
     SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
     {
     shodan init "$SHO"
     } &> /dev/null
     fi
else
     sleep 0.5
     {
     pip install setuptools
     pip uninstall shodan -y
     pip install shodan
     } &> /dev/null
sleep 0.5
SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
{
shodan init "$SHO"
} &> /dev/null
fi
SAS="$2"
shodan host "$SAS"
exit

elif [[ "$1" = "download" ]]
then
if [[ $2 = "" ]]
then
echo -e "Usage: copycat $1 <request> <filename>"
exit
fi
if [[ $3 = "" ]]
then
echo -e "Usage: copycat $1 <request> <filename>"
exit
fi
if [[ -f /usr/local/bin/shodan ]]
then
sleep 0.5
     if [[ -f ~/.shodan/api_key ]]
     then
     sleep 0.5
     else
     sleep 0.5
     SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
     {
     shodan init "$SHO"
     } &> /dev/null
     fi
else
     sleep 0.5
     {
     pip install setuptools
     pip uninstall shodan -y
     pip install shodan
     } &> /dev/null
sleep 0.5
SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
{
shodan init "$SHO"
} &> /dev/null
fi
SAS="$2"
SIS="$3"
shodan download "$SIS" "$SAS"
exit

elif [[ "$1" = "parse" ]]
then
if [[ $2 = "" ]]
then
echo -e "Usage: copycat $1 <format> <filename>"
exit
fi
if [[ $3 = "" ]]
then
echo -e "Usage: copycat $1 <format> <filename>"
exit
fi
if [[ "$2" = "--only-ip-port" ]]
then
if [[ -f /usr/local/bin/shodan ]]
then
sleep 0.5
     if [[ -f ~/.shodan/api_key ]]
     then
     sleep 0.5
     else
     sleep 0.5
     SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
     {
     shodan init "$SHO"
     } &> /dev/null
     fi
else
     sleep 0.5
     {
     pip install setuptools
     pip uninstall shodan -y
     pip install shodan
     } &> /dev/null
sleep 0.5
SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
{
shodan init "$SHO"
} &> /dev/null
fi
SAS="$3"
shodan parse --fields ip_str,port --separator , "$SAS"
exit
fi
if [[ "$2" = "--only-ip-org" ]]
then
if [[ -f /usr/local/bin/shodan ]]
then
sleep 0.5
     if [[ -f ~/.shodan/api_key ]]
     then
     sleep 0.5
     else
     sleep 0.5
     SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
     {
     shodan init "$SHO"
     } &> /dev/null
     fi
else
     sleep 0.5
     {
     pip install setuptools
     pip uninstall shodan -y
     pip install shodan
     } &> /dev/null
sleep 0.5
SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
{
shodan init "$SHO"
} &> /dev/null
fi
SAS="$3"
shodan parse --fields ip_str,org --separator , "$SAS"
exit
fi
if [[ "$2" = "--only-org-hostnames" ]]
then
if [[ -f /usr/local/bin/shodan ]]
then
sleep 0.5
     if [[ -f ~/.shodan/api_key ]]
     then
     sleep 0.5
     else
     sleep 0.5
     SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
     {
     shodan init "$SHO"
     } &> /dev/null
     fi
else
     sleep 0.5
     {
     pip install setuptools
     pip uninstall shodan -y
     pip install shodan
     } &> /dev/null
sleep 0.5
SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
{
shodan init "$SHO"
} &> /dev/null
fi
SAS="$3"
shodan parse --fields org,hostnames --separator , "$SAS"
exit
fi
if [[ "$2" = "--only-port-hostnames" ]]
then
if [[ -f /usr/local/bin/shodan ]]
then
sleep 0.5
     if [[ -f ~/.shodan/api_key ]]
     then
     sleep 0.5
     else
     sleep 0.5
     SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
     {
     shodan init "$SHO"
     } &> /dev/null
     fi
else
     sleep 0.5
     {
     pip install setuptools
     pip uninstall shodan -y
     pip install shodan
     } &> /dev/null
sleep 0.5
SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
{
shodan init "$SHO"
} &> /dev/null
fi
SAS="$3"
shodan parse --fields port,hostnames --separator , "$SAS"
exit
fi
if [[ "$2" = "--only-port-org" ]]
then
if [[ -f /usr/local/bin/shodan ]]
then
sleep 0.5
     if [[ -f ~/.shodan/api_key ]]
     then
     sleep 0.5
     else
     sleep 0.5
     SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
     {
     shodan init "$SHO"
     } &> /dev/null
     fi
else
     sleep 0.5
     {
     pip install setuptools
     pip uninstall shodan -y
     pip install shodan
     } &> /dev/null
sleep 0.5
SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
{
shodan init "$SHO"
} &> /dev/null
fi
SAS="$3"
shodan parse --fields port,org --separator , "$SAS"
exit
fi
if [[ "$2" = "--only-data-hostnames" ]]
then
if [[ -f /usr/local/bin/shodan ]]
then
sleep 0.5
     if [[ -f ~/.shodan/api_key ]]
     then
     sleep 0.5
     else
     sleep 0.5
     SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
     {
     shodan init "$SHO"
     } &> /dev/null
     fi
else
     sleep 0.5
     {
     pip install setuptools
     pip uninstall shodan -y
     pip install shodan
     } &> /dev/null
sleep 0.5
SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
{
shodan init "$SHO"
} &> /dev/null
fi
SAS="$3"
shodan parse --fields ip_str,port,hostnames --separator , "$SAS"
exit
fi
if [[ "$2" = "--only-hostnames" ]]
then
if [[ -f /usr/local/bin/shodan ]]
then
sleep 0.5
     if [[ -f ~/.shodan/api_key ]]
     then
     sleep 0.5
     else
     sleep 0.5
     SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
     {
     shodan init "$SHO"
     } &> /dev/null
     fi
else
     sleep 0.5
     {
     pip install setuptools
     pip uninstall shodan -y
     pip install shodan
     } &> /dev/null
sleep 0.5
SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
{
shodan init "$SHO"
} &> /dev/null
fi
SAS="$3"
shodan parse --fields hostnames --separator , "$SAS"
exit
fi
if [[ "$2" = "--only-ip-org" ]]
then
if [[ -f /usr/local/bin/shodan ]]
then
sleep 0.5
     if [[ -f ~/.shodan/api_key ]]
     then
     sleep 0.5
     else
     sleep 0.5
     SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
     {
     shodan init "$SHO"
     } &> /dev/null
     fi
else
     sleep 0.5
     {
     pip install setuptools
     pip uninstall shodan -y
     pip install shodan
     } &> /dev/null
sleep 0.5
SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
{
shodan init "$SHO"
} &> /dev/null
fi
SAS="$3"
shodan parse --fields ip_str,org --separator , "$SAS"
exit
fi
if [[ "$2" = "--only-ip-hostnames" ]]
then
if [[ -f /usr/local/bin/shodan ]]
then
sleep 0.5
     if [[ -f ~/.shodan/api_key ]]
     then
     sleep 0.5
     else
     sleep 0.5
     SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
     {
     shodan init "$SHO"
     } &> /dev/null
     fi
else
     sleep 0.5
     {
     pip install setuptools
     pip uninstall shodan -y
     pip install shodan
     } &> /dev/null
sleep 0.5
SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
{
shodan init "$SHO"
} &> /dev/null
fi
SAS="$3"
shodan parse --fields ip_str,hostnames --separator , "$SAS"
exit
fi
if [[ "$2" = "--only-data-org" ]]
then
if [[ -f /usr/local/bin/shodan ]]
then
sleep 0.5
     if [[ -f ~/.shodan/api_key ]]
     then
     sleep 0.5
     else
     sleep 0.5
     SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
     {
     shodan init "$SHO"
     } &> /dev/null
     fi
else
     sleep 0.5
     {
     pip install setuptools
     pip uninstall shodan -y
     pip install shodan
     } &> /dev/null
sleep 0.5
SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
{
shodan init "$SHO"
} &> /dev/null
fi
SAS="$3"
shodan parse --fields ip_str,port,org --separator , "$SAS"
exit
fi
if [[ "$2" = "--only-data" ]]
then
if [[ -f /usr/local/bin/shodan ]]
then
sleep 0.5
     if [[ -f ~/.shodan/api_key ]]
     then
     sleep 0.5
     else
     sleep 0.5
     SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
     {
     shodan init "$SHO"
     } &> /dev/null
     fi
else
     sleep 0.5
     {
     pip install setuptools
     pip uninstall shodan -y
     pip install shodan
     } &> /dev/null
sleep 0.5
SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
{
shodan init "$SHO"
} &> /dev/null
fi
SAS="$3"
shodan parse --fields ip_str,port --separator , "$SAS"
exit
fi
if [[ "$2" = "--only-org" ]]
then
if [[ -f /usr/local/bin/shodan ]]
then
sleep 0.5
     if [[ -f ~/.shodan/api_key ]]
     then
     sleep 0.5
     else
     sleep 0.5
     SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
     {
     shodan init "$SHO"
     } &> /dev/null
     fi
else
     sleep 0.5
     {
     pip install setuptools
     pip uninstall shodan -y
     pip install shodan
     } &> /dev/null
sleep 0.5
SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
{
shodan init "$SHO"
} &> /dev/null
fi
SAS="$3"
shodan parse --fields org --separator , "$SAS"
exit
fi
if [[ "$2" = "--only-port" ]]
then
if [[ -f /usr/local/bin/shodan ]]
then
sleep 0.5
     if [[ -f ~/.shodan/api_key ]]
     then
     sleep 0.5
     else
     sleep 0.5
     SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
     {
     shodan init "$SHO"
     } &> /dev/null
     fi
else
     sleep 0.5
     {
     pip install setuptools
     pip uninstall shodan -y
     pip install shodan
     } &> /dev/null
sleep 0.5
SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
{
shodan init "$SHO"
} &> /dev/null
fi
SAS="$3"
shodan parse --fields port --separator , "$SAS"
exit
fi
if [[ "$2" = "--only-ip" ]]
then
if [[ -f /usr/local/bin/shodan ]]
then
sleep 0.5
     if [[ -f ~/.shodan/api_key ]]
     then
     sleep 0.5
     else
     sleep 0.5
     SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
     {
     shodan init "$SHO"
     } &> /dev/null
     fi
else
     sleep 0.5
     {
     pip install setuptools
     pip uninstall shodan -y
     pip install shodan
     } &> /dev/null
sleep 0.5
SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
{
shodan init "$SHO"
} &> /dev/null
fi
SAS="$3"
shodan parse --fields ip_str --separator , "$SAS"
exit
fi
if [[ -f /usr/local/bin/shodan ]]
then
sleep 0.5
     if [[ -f ~/.shodan/api_key ]]
     then
     sleep 0.5
     else
     sleep 0.5
     SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
     {
     shodan init "$SHO"
     } &> /dev/null
     fi
else
     sleep 0.5
     {
     pip install setuptools
     pip uninstall shodan -y
     pip install shodan
     } &> /dev/null
sleep 0.5
SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
{
shodan init "$SHO"
} &> /dev/null
fi
SAS="$2"
shodan parse "$SAS"
exit

elif [[ "$1" = "stats" ]]
then
if [[ $2 = "" ]]
then
echo -e "Usage: copycat $1 <request>"
exit
fi
if [[ -f /usr/local/bin/shodan ]]
then
sleep 0.5
     if [[ -f ~/.shodan/api_key ]]
     then
     sleep 0.5
     else
     sleep 0.5
     SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
     {
     shodan init "$SHO"
     } &> /dev/null
     fi
else
     sleep 0.5
     {
     pip install setuptools
     pip uninstall shodan -y
     pip install shodan
     } &> /dev/null
sleep 0.5
SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
{
shodan init "$SHO"
} &> /dev/null
fi
SAS="$2"
shodan stats "$SAS"
exit

elif [[ "$1" = "honeypot" ]]
then
if [[ $2 = "" ]]
then
echo -e "Usage: copycat $1 <host>"
exit
fi
if [[ -f /usr/local/bin/shodan ]]
then
sleep 0.5
     if [[ -f ~/.shodan/api_key ]]
     then
     sleep 0.5
     else
     sleep 0.5
     SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
     {
     shodan init "$SHO"
     } &> /dev/null
     fi
else
     sleep 0.5
     {
     pip install setuptools
     pip uninstall shodan -y
     pip install shodan
     } &> /dev/null
sleep 0.5
SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
{
shodan init "$SHO"
} &> /dev/null
fi
SAS="$2"
shodan honeyscore "$SAS"
exit

elif [[ "$1" = "stream" ]]
then
if [[ -f /usr/local/bin/shodan ]]
then
sleep 0.5
     if [[ -f ~/.shodan/api_key ]]
     then
     sleep 0.5
     else
     sleep 0.5
     SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
     {
     shodan init "$SHO"
     } &> /dev/null
     fi
else
     sleep 0.5
     {
     pip install setuptools
     pip uninstall shodan -y
     pip install shodan
     } &> /dev/null
sleep 0.5
SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
{
shodan init "$SHO"
} &> /dev/null
fi
shodan stream
exit

elif [[ "$1" = "radar" ]]
then
if [[ -f /usr/local/bin/shodan ]]
then
sleep 0.5
     if [[ -f ~/.shodan/api_key ]]
     then
     sleep 0.5
     else
     sleep 0.5
     SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
     {
     shodan init "$SHO"
     } &> /dev/null
     fi
else
     sleep 0.5
     {
     pip install setuptools
     pip uninstall shodan -y
     pip install shodan
     } &> /dev/null
sleep 0.5
SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
{
shodan init "$SHO"
} &> /dev/null
fi
copycat-radar
exit

elif [[ "$1" = "update" ]]
then
{
ASESR="$( curl -s checkip.dyndns.org | sed -e 's/.*Current IP Address: //' -e 's/<.*$//' )"
} &> /dev/null
if [[ "$ASESR" = "" ]]
then 
sleep 1
echo ""$RS"Download failed!"$CE""
sleep 1
exit
fi
if [[ $EUID -ne 0 ]]
then
sleep 1
echo ""$RS"Permission denied!"$CE""
sleep 1
exit
fi
sleep 1
echo ""$BS"Installing update..."$CE""
{
rm -rf ~/copycat
rm /usr/local/bin/copycat
rm /usr/local/bin/copycat-radar
rm /bin/copycat
rm /bin/copycat-radar
cd ~
git clone https://github.com/entynetproject/copycat.git
cd copycat
chmod +x install.sh
./install.sh
} &> /dev/null
echo ""$GNS"Successfully updated!"$CE""
sleep 1
exit

elif [[ "$1" = "search" ]]
then
if [[ $2 = "" ]]
then
echo -e "Usage: copycat $1 <request>"
exit
fi
if [[ -f /usr/local/bin/shodan ]]
then
sleep 0.5
     if [[ -f ~/.shodan/api_key ]]
     then
     sleep 0.5
     else
     sleep 0.5
     SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
     {
     shodan init "$SHO"
     } &> /dev/null
     fi
else
     sleep 0.5
     {
     pip install setuptools
     pip uninstall shodan -y
     pip install shodan
     } &> /dev/null
sleep 0.5
SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
{
shodan init "$SHO"
} &> /dev/null
fi
SAS="$2"
shodan search "$SAS"
exit

elif [[ "$1" = "domain" ]]
then
if [[ $2 = "" ]]
then
echo -e "Usage: copycat $1 <domain>"
exit
fi
if [[ -f /usr/local/bin/shodan ]]
then
sleep 0.5
     if [[ -f ~/.shodan/api_key ]]
     then
     sleep 0.5
     else
     sleep 0.5
     SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
     {
     shodan init "$SHO"
     } &> /dev/null
     fi
else
     sleep 0.5
     {
     pip install setuptools
     pip uninstall shodan -y
     pip install shodan
     } &> /dev/null
sleep 0.5
SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
{
shodan init "$SHO"
} &> /dev/null
fi
SAS="$2"
shodan domain "$SAS"
exit

fi

if [[ -f /usr/local/bin/shodan ]]
then
sleep 0.5
     if [[ -f ~/.shodan/api_key ]]
     then
     sleep 0.5
     else
     sleep 0.5
     SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
     {
     shodan init "$SHO"
     } &> /dev/null
     fi
else
     sleep 0.5
     {
     pip install setuptools
     pip uninstall shodan -y
     pip install shodan
     } &> /dev/null
sleep 0.5
SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
{
shodan init "$SHO"
} &> /dev/null
fi

{
SED="$( cat ~/.shodan/api_key )"
} &> /dev/null
if [[ "$SED" != "PSKINdQe1GyxGgecYz2191H2JoS9qvgD" ]]
then 
{
rm ~/.shodan/api_key
echo PSKINdQe1GyxGgecYz2191H2JoS9qvgD >> ~/.shodan/api_key
} &> /dev/null
fi

sleep 1
echo
cat banner/banner.txt           
echo 
echo  "Usage: copycat [OPTION...] <arguments...>"
echo  "Copyright (C) 2019, Entynetproject. All Rights Reserved."           
echo  
echo  "   host     <host>                Show all available information for an IP."
echo  "   honeypot <host>                Check whether the IP is a honeypot or not."
echo  "   download <request> <filename>  Download search results as JSON database."
echo  "   parse    <format> <filename>   Extract information out of compressed JSON."
echo  "   stats    <request>             Provide summary information about a search."                 
echo  "   search   <request>             Search the Internet database from Copycat."
echo  "   domain   <domain>              Show all available information for a domain."
echo  "   stream                         Stream Copycat search results in real-time."
echo  "   radar                          The real-time map of Copycat search results."
echo  "   update                         Update Copycat Toolkit and API configuration."
echo  "   help                           Show all available Copycat Toolkit options."
echo    
exit

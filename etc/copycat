#!/bin/bash

# MIT License
#
# Copyright (C) 2019-2020, Entynetproject. All Rights Reserved.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

#blue start 
	BS="-e \033[0;34m"
#color end
	CE="\033[0m"
#red start
	RS="-e \033[0;31m"
#green start
	GNS="-e \033[0;32m"

printf '\033]2;Copycat Toolkit\a'

{
SED="$( cat ~/.shodan/api_key )"
} &> /dev/null
if [[ "$SED" != "PSKINdQe1GyxGgecYz2191H2JoS9qvgD" ]]
then 
{
rm ~/.shodan/api_key
echo PSKINdQe1GyxGgecYz2191H2JoS9qvgD >> ~/.shodan/api_key
} &> /dev/null
fi

if [[ "$1" = "help" ]]
then
if which shodan > /dev/null; then
sleep 0.5
     if [[ -f ~/.shodan/api_key ]]
     then
     sleep 0.5
     else
     sleep 0.5
     SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
     {
     shodan init "$SHO"
     } &> /dev/null
     fi
else
     sleep 0.5
     {
     python3 -m pip install setuptools
     python3 -m pip uninstall shodan -y
     easy_install shodan
     } &> /dev/null
sleep 0.5
SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
{
shodan init "$SHO"
} &> /dev/null
fi
sleep 1
echo -e "                                  _   "
echo -e "                                 | |  "
echo -e "   ___ ___  _ __  _   _  ___ __ _| |_ "
echo -e "  / __/ _ \| '_ \| | | |/ __/ _\` | __|"
echo -e " | (_| (_) | |_) | |_| | (_| (_| | |_ "
echo -e "  \___\___/| .__/ \__, |\___\__,_|\__|"
echo -e "           | |     __/ |              "
echo -e "           |_|    |___/               "
echo 
echo  "Usage: copycat [option] <arguments>"
echo  
echo  "  host     <host>                Show all available information for an IP."
echo  "  honeypot <host>                Check whether the IP is a honeypot or not."
echo  "  download <request> <filename>  Download search results as JSON database."
echo  "  parse    <format> <filename>   Extract information out of compressed JSON."
echo  "  stats    <request>             Provide summary information about a search."                 
echo  "  search   <request>             Search the Internet database from Copycat."
echo  "  domain   <domain>              Show all available information for a domain."
echo  "  formats                        Show all available Copycat parse formats."
echo  "  stream                         Stream Copycat search results in real-time."
echo  "  radar                          The real-time map of Copycat search results."
echo  "  update                         Update Copycat Toolkit and API configuration."
echo  "  help                           Show all available Copycat Toolkit options."
echo    
exit

elif [[ "$1" = "host" ]]
then
if [[ $2 = "" ]]
then
echo -e "Usage: copycat $1 <host>"
exit
fi
if which shodan > /dev/null; then
sleep 0.5
     if [[ -f ~/.shodan/api_key ]]
     then
     sleep 0.5
     else
     sleep 0.5
     SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
     {
     shodan init "$SHO"
     } &> /dev/null
     fi
else
     sleep 0.5
     {
     python3 -m pip install setuptools
     python3 -m pip uninstall shodan -y
     easy_install shodan
     } &> /dev/null
sleep 0.5
SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
{
shodan init "$SHO"
} &> /dev/null
fi
SAS="$2"
shodan host "$SAS"
exit

elif [[ "$1" = "download" ]]
then
if [[ $2 = "" ]]
then
echo -e "Usage: copycat $1 <request> <filename>"
exit
fi
if [[ $3 = "" ]]
then
echo -e "Usage: copycat $1 <request> <filename>"
exit
fi
if which shodan > /dev/null; then
sleep 0.5
     if [[ -f ~/.shodan/api_key ]]
     then
     sleep 0.5
     else
     sleep 0.5
     SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
     {
     shodan init "$SHO"
     } &> /dev/null
     fi
else
     sleep 0.5
     {
     python3 -m pip install setuptools
     python3 -m pip uninstall shodan -y
     easy_install shodan
     } &> /dev/null
sleep 0.5
SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
{
shodan init "$SHO"
} &> /dev/null
fi
SAS="$2"
SIS="$3"
shodan download "$SIS" "$SAS"
exit

elif [[ "$1" = "parse" ]]
then
if [[ $2 = "" ]]
then
echo -e "Usage: copycat $1 <format> <filename>"
exit
fi
if [[ $3 = "" ]]
then
echo -e "Usage: copycat $1 <format> <filename>"
exit
fi
if [[ -f "$3" ]]
then
sleep 0
else
echo -e "Error: File not found"
exit
fi
if [[ "$2" = "--format-all" ]]
then
if which shodan > /dev/null; then
sleep 0.5
     if [[ -f ~/.shodan/api_key ]]
     then
     sleep 0.5
     else
     sleep 0.5
     SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
     {
     shodan init "$SHO"
     } &> /dev/null
     fi
else
     sleep 0.5
     {
     python3 -m pip install setuptools
     python3 -m pip uninstall shodan -y
     easy_install shodan
     } &> /dev/null
sleep 0.5
SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
{
shodan init "$SHO"
} &> /dev/null
fi
SAS="$3"
shodan parse "$SAS"
exit
fi

if [[ "$2" = "--format-ip-port" ]]
then
if which shodan > /dev/null; then
sleep 0.5
     if [[ -f ~/.shodan/api_key ]]
     then
     sleep 0.5
     else
     sleep 0.5
     SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
     {
     shodan init "$SHO"
     } &> /dev/null
     fi
else
     sleep 0.5
     {
     python3 -m pip install setuptools
     python3 -m pip uninstall shodan -y
     easy_install shodan
     } &> /dev/null
sleep 0.5
SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
{
shodan init "$SHO"
} &> /dev/null
fi
SAS="$3"
shodan parse --fields ip_str,port --separator , "$SAS"
exit
fi
if [[ "$2" = "--format-ip-org" ]]
then
if which shodan > /dev/null; then
sleep 0.5
     if [[ -f ~/.shodan/api_key ]]
     then
     sleep 0.5
     else
     sleep 0.5
     SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
     {
     shodan init "$SHO"
     } &> /dev/null
     fi
else
     sleep 0.5
     {
     python3 -m pip install setuptools
     python3 -m pip uninstall shodan -y
     easy_install shodan
     } &> /dev/null
sleep 0.5
SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
{
shodan init "$SHO"
} &> /dev/null
fi
SAS="$3"
shodan parse --fields ip_str,org --separator , "$SAS"
exit
fi
if [[ "$2" = "--format-org-hostnames" ]]
then
if which shodan > /dev/null; then
sleep 0.5
     if [[ -f ~/.shodan/api_key ]]
     then
     sleep 0.5
     else
     sleep 0.5
     SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
     {
     shodan init "$SHO"
     } &> /dev/null
     fi
else
     sleep 0.5
     {
     python3 -m pip install setuptools
     python3 -m pip uninstall shodan -y
     easy_install shodan
     } &> /dev/null
sleep 0.5
SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
{
shodan init "$SHO"
} &> /dev/null
fi
SAS="$3"
shodan parse --fields org,hostnames --separator , "$SAS"
exit
fi
if [[ "$2" = "--format-port-hostnames" ]]
then
if which shodan > /dev/null; then
sleep 0.5
     if [[ -f ~/.shodan/api_key ]]
     then
     sleep 0.5
     else
     sleep 0.5
     SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
     {
     shodan init "$SHO"
     } &> /dev/null
     fi
else
     sleep 0.5
     {
     python3 -m pip install setuptools
     python3 -m pip uninstall shodan -y
     easy_install shodan
     } &> /dev/null
sleep 0.5
SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
{
shodan init "$SHO"
} &> /dev/null
fi
SAS="$3"
shodan parse --fields port,hostnames --separator , "$SAS"
exit
fi
if [[ "$2" = "--format-port-org" ]]
then
if which shodan > /dev/null; then
sleep 0.5
     if [[ -f ~/.shodan/api_key ]]
     then
     sleep 0.5
     else
     sleep 0.5
     SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
     {
     shodan init "$SHO"
     } &> /dev/null
     fi
else
     sleep 0.5
     {
     python3 -m pip install setuptools
     python3 -m pip uninstall shodan -y
     easy_install shodan
     } &> /dev/null
sleep 0.5
SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
{
shodan init "$SHO"
} &> /dev/null
fi
SAS="$3"
shodan parse --fields port,org --separator , "$SAS"
exit
fi
if [[ "$2" = "--format-data-hostnames" ]]
then
if which shodan > /dev/null; then
sleep 0.5
     if [[ -f ~/.shodan/api_key ]]
     then
     sleep 0.5
     else
     sleep 0.5
     SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
     {
     shodan init "$SHO"
     } &> /dev/null
     fi
else
     sleep 0.5
     {
     python3 -m pip install setuptools
     python3 -m pip uninstall shodan -y
     easy_install shodan
     } &> /dev/null
sleep 0.5
SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
{
shodan init "$SHO"
} &> /dev/null
fi
SAS="$3"
shodan parse --fields ip_str,port,hostnames --separator , "$SAS"
exit
fi
if [[ "$2" = "--format-hostnames" ]]
then
if which shodan > /dev/null; then
sleep 0.5
     if [[ -f ~/.shodan/api_key ]]
     then
     sleep 0.5
     else
     sleep 0.5
     SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
     {
     shodan init "$SHO"
     } &> /dev/null
     fi
else
     sleep 0.5
     {
     python3 -m pip install setuptools
     python3 -m pip uninstall shodan -y
     easy_install shodan
     } &> /dev/null
sleep 0.5
SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
{
shodan init "$SHO"
} &> /dev/null
fi
SAS="$3"
shodan parse --fields hostnames --separator , "$SAS"
exit
fi
if [[ "$2" = "--format-ip-org" ]]
then
if which shodan > /dev/null; then
sleep 0.5
     if [[ -f ~/.shodan/api_key ]]
     then
     sleep 0.5
     else
     sleep 0.5
     SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
     {
     shodan init "$SHO"
     } &> /dev/null
     fi
else
     sleep 0.5
     {
     python3 -m pip install setuptools
     python3 -m pip uninstall shodan -y
     easy_install shodan
     } &> /dev/null
sleep 0.5
SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
{
shodan init "$SHO"
} &> /dev/null
fi
SAS="$3"
shodan parse --fields ip_str,org --separator , "$SAS"
exit
fi
if [[ "$2" = "--format-ip-hostnames" ]]
then
if which shodan > /dev/null; then
sleep 0.5
     if [[ -f ~/.shodan/api_key ]]
     then
     sleep 0.5
     else
     sleep 0.5
     SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
     {
     shodan init "$SHO"
     } &> /dev/null
     fi
else
     sleep 0.5
     {
     python3 -m pip install setuptools
     python3 -m pip uninstall shodan -y
     easy_install shodan
     } &> /dev/null
sleep 0.5
SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
{
shodan init "$SHO"
} &> /dev/null
fi
SAS="$3"
shodan parse --fields ip_str,hostnames --separator , "$SAS"
exit
fi
if [[ "$2" = "--format-data-org" ]]
then
if which shodan > /dev/null; then
sleep 0.5
     if [[ -f ~/.shodan/api_key ]]
     then
     sleep 0.5
     else
     sleep 0.5
     SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
     {
     shodan init "$SHO"
     } &> /dev/null
     fi
else
     sleep 0.5
     {
     python3 -m pip install setuptools
     python3 -m pip uninstall shodan -y
     easy_install shodan
     } &> /dev/null
sleep 0.5
SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
{
shodan init "$SHO"
} &> /dev/null
fi
SAS="$3"
shodan parse --fields ip_str,port,org --separator , "$SAS"
exit
fi
if [[ "$2" = "--format-data" ]]
then
if which shodan > /dev/null; then
sleep 0.5
     if [[ -f ~/.shodan/api_key ]]
     then
     sleep 0.5
     else
     sleep 0.5
     SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
     {
     shodan init "$SHO"
     } &> /dev/null
     fi
else
     sleep 0.5
     {
     python3 -m pip install setuptools
     python3 -m pip uninstall shodan -y
     easy_install shodan
     } &> /dev/null
sleep 0.5
SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
{
shodan init "$SHO"
} &> /dev/null
fi
SAS="$3"
shodan parse --fields ip_str,port --separator , "$SAS"
exit
fi
if [[ "$2" = "--format-org" ]]
then
if which shodan > /dev/null; then
sleep 0.5
     if [[ -f ~/.shodan/api_key ]]
     then
     sleep 0.5
     else
     sleep 0.5
     SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
     {
     shodan init "$SHO"
     } &> /dev/null
     fi
else
     sleep 0.5
     {
     python3 -m pip install setuptools
     python3 -m pip uninstall shodan -y
     easy_install shodan
     } &> /dev/null
sleep 0.5
SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
{
shodan init "$SHO"
} &> /dev/null
fi
SAS="$3"
shodan parse --fields org --separator , "$SAS"
exit
fi
if [[ "$2" = "--format-port" ]]
then
if which shodan > /dev/null; then
sleep 0.5
     if [[ -f ~/.shodan/api_key ]]
     then
     sleep 0.5
     else
     sleep 0.5
     SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
     {
     shodan init "$SHO"
     } &> /dev/null
     fi
else
     sleep 0.5
     {
     python3 -m pip install setuptools
     python3 -m pip uninstall shodan -y
     easy_install shodan
     } &> /dev/null
sleep 0.5
SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
{
shodan init "$SHO"
} &> /dev/null
fi
SAS="$3"
shodan parse --fields port --separator , "$SAS"
exit
fi
if [[ "$2" = "--format-ip" ]]
then
if which shodan > /dev/null; then
sleep 0.5
     if [[ -f ~/.shodan/api_key ]]
     then
     sleep 0.5
     else
     sleep 0.5
     SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
     {
     shodan init "$SHO"
     } &> /dev/null
     fi
else
     sleep 0.5
     {
     python3 -m pip install setuptools
     python3 -m pip uninstall shodan -y
     easy_install shodan
     } &> /dev/null
sleep 0.5
SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
{
shodan init "$SHO"
} &> /dev/null
fi
SAS="$3"
shodan parse --fields ip_str --separator , "$SAS"
exit
fi
echo -e "Error: Invalid parse format"
exit

elif [[ "$1" = "stats" ]]
then
if [[ $2 = "" ]]
then
echo -e "Usage: copycat $1 <request>"
exit
fi
if which shodan > /dev/null; then
sleep 0.5
     if [[ -f ~/.shodan/api_key ]]
     then
     sleep 0.5
     else
     sleep 0.5
     SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
     {
     shodan init "$SHO"
     } &> /dev/null
     fi
else
     sleep 0.5
     {
     python3 -m pip install setuptools
     python3 -m pip uninstall shodan -y
     easy_install shodan
     } &> /dev/null
sleep 0.5
SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
{
shodan init "$SHO"
} &> /dev/null
fi
SAS="$2"
shodan stats "$SAS"
exit

elif [[ "$1" = "honeypot" ]]
then
if [[ $2 = "" ]]
then
echo -e "Usage: copycat $1 <host>"
exit
fi
if which shodan > /dev/null; then
sleep 0.5
     if [[ -f ~/.shodan/api_key ]]
     then
     sleep 0.5
     else
     sleep 0.5
     SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
     {
     shodan init "$SHO"
     } &> /dev/null
     fi
else
     sleep 0.5
     {
     python3 -m pip install setuptools
     python3 -m pip uninstall shodan -y
     easy_install shodan
     } &> /dev/null
sleep 0.5
SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
{
shodan init "$SHO"
} &> /dev/null
fi
SAS="$2"
shodan honeyscore "$SAS"
exit

elif [[ "$1" = "stream" ]]
then
if which shodan > /dev/null; then
sleep 0.5
     if [[ -f ~/.shodan/api_key ]]
     then
     sleep 0.5
     else
     sleep 0.5
     SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
     {
     shodan init "$SHO"
     } &> /dev/null
     fi
else
     sleep 0.5
     {
     python3 -m pip install setuptools
     python3 -m pip uninstall shodan -y
     easy_install shodan
     } &> /dev/null
sleep 0.5
SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
{
shodan init "$SHO"
} &> /dev/null
fi
clear
shodan stream
exit

elif [[ "$1" = "formats" ]]
then
if which shodan > /dev/null; then
sleep 0.5
     if [[ -f ~/.shodan/api_key ]]
     then
     sleep 0.5
     else
     sleep 0.5
     SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
     {
     shodan init "$SHO"
     } &> /dev/null
     fi
else
     sleep 0.5
     {
     python3 -m pip install setuptools
     python3 -m pip uninstall shodan -y
     easy_install shodan
     } &> /dev/null
sleep 0.5
SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
{
shodan init "$SHO"
} &> /dev/null
fi
echo
echo  " --format-all             Format to display all."
echo  " --format-ip              Format to display IP."    
echo  " --format-port            Format to display port."
echo  " --format-org             Format to display org."
echo  " --format-hostnames       Format to display hostnames."
echo  " --format-data            Format to display IP and port."
echo  " --format-ip-port         Format to display IP and port."
echo  " --format-ip-org          Format to display IP and org."
echo  " --format-ip-hostnames    Format to display IP and hostnames."
echo  " --format-port-org        Format to display port and org."
echo  " --format-port-hostnames  Format to display port and hostnames."
echo  " --format-org-hostnames   Format to display org and hostnames."
echo  " --format-data-org        Format to display IP, port and org."
echo  " --format-data-hostnames  Format to display IP, port and hostnames."
echo
exit

elif [[ "$1" = "radar" ]]
then
if which shodan > /dev/null; then
sleep 0.5
     if [[ -f ~/.shodan/api_key ]]
     then
     sleep 0.5
     else
     sleep 0.5
     SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
     {
     shodan init "$SHO"
     } &> /dev/null
     fi
else
     sleep 0.5
     {
     python3 -m pip install setuptools
     python3 -m pip uninstall shodan -y
     easy_install shodan
     } &> /dev/null
sleep 0.5
SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
{
shodan init "$SHO"
} &> /dev/null
fi
python3 ~/copycat/core/copycat-radar.py
exit

elif [[ "$1" = "update" ]]
then
if [[ -d /data/data/com.termux ]]
then
if [[ -f /data/data/com.termux/files/usr/bin/copycat ]]
then
UPD="true"
else
UPD="false"
fi
else
if [[ -f /usr/local/bin/copycat ]]
then
UPD="true"
else
UPD="false"
fi
fi
{
ASESR="$( curl -s checkip.dyndns.org | sed -e 's/.*Current IP Address: //' -e 's/<.*$//' )"
} &> /dev/null
if [[ "$ASESR" = "" ]]
then 
sleep 1
echo ""$RS"Download failed!"$CE""
sleep 1
exit
fi
if [[ $EUID -ne 0 ]]
then
sleep 1
echo ""$RS"Permission denied!"$CE""
sleep 1
exit
fi
sleep 1
echo ""$BS"Installing update..."$CE""
{
rm -rf ~/copycat
rm /usr/local/bin/copycat
rm /bin/copycat
rm /data/data/com.termux/files/usr/bin/copycat
cd ~
git clone https://github.com/entynetproject/copycat.git
if [[ "$UPD" != "true" ]]
then
sleep 0
else
cd copycat
chmod +x install.sh
./install.sh
fi
} &> /dev/null
echo ""$GNS"Successfully updated!"$CE""
sleep 1
exit

elif [[ "$1" = "search" ]]
then
if [[ $2 = "" ]]
then
echo -e "Usage: copycat $1 <request>"
exit
fi
if which shodan > /dev/null; then
sleep 0.5
     if [[ -f ~/.shodan/api_key ]]
     then
     sleep 0.5
     else
     sleep 0.5
     SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
     {
     shodan init "$SHO"
     } &> /dev/null
     fi
else
     sleep 0.5
     {
     python3 -m pip install setuptools
     python3 -m pip uninstall shodan -y
     easy_install shodan
     } &> /dev/null
sleep 0.5
SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
{
shodan init "$SHO"
} &> /dev/null
fi
SAS="$2"
shodan search "$SAS"
exit

elif [[ "$1" = "domain" ]]
then
if [[ $2 = "" ]]
then
echo -e "Usage: copycat $1 <domain>"
exit
fi
if which shodan > /dev/null; then
sleep 0.5
     if [[ -f ~/.shodan/api_key ]]
     then
     sleep 0.5
     else
     sleep 0.5
     SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
     {
     shodan init "$SHO"
     } &> /dev/null
     fi
else
     sleep 0.5
     {
     python3 -m pip install setuptools
     python3 -m pip uninstall shodan -y
     easy_install shodan
     } &> /dev/null
sleep 0.5
SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
{
shodan init "$SHO"
} &> /dev/null
fi
SAS="$2"
shodan domain "$SAS"
exit

fi

if which shodan > /dev/null; then
sleep 0.5
     if [[ -f ~/.shodan/api_key ]]
     then
     sleep 0.5
     else
     sleep 0.5
     SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
     {
     shodan init "$SHO"
     } &> /dev/null
     fi
else
     sleep 0.5
     {
     python3 -m pip install setuptools
     python3 -m pip uninstall shodan -y
     easy_install shodan
     } &> /dev/null
sleep 0.5
SHO="PSKINdQe1GyxGgecYz2191H2JoS9qvgD"
{
shodan init "$SHO"
} &> /dev/null
fi

{
SED="$( cat ~/.shodan/api_key )"
} &> /dev/null
if [[ "$SED" != "PSKINdQe1GyxGgecYz2191H2JoS9qvgD" ]]
then 
{
rm ~/.shodan/api_key
echo PSKINdQe1GyxGgecYz2191H2JoS9qvgD >> ~/.shodan/api_key
} &> /dev/null
fi

sleep 1  
echo -e "                                  _   "
echo -e "                                 | |  "
echo -e "   ___ ___  _ __  _   _  ___ __ _| |_ "
echo -e "  / __/ _ \| '_ \| | | |/ __/ _\` | __|"
echo -e " | (_| (_) | |_) | |_| | (_| (_| | |_ "
echo -e "  \___\___/| .__/ \__, |\___\__,_|\__|"
echo -e "           | |     __/ |              "
echo -e "           |_|    |___/               "
echo 
echo  "Usage: copycat [option] <arguments>"
echo  
echo  "  host     <host>                Show all available information for an IP."
echo  "  honeypot <host>                Check whether the IP is a honeypot or not."
echo  "  download <request> <filename>  Download search results as JSON database."
echo  "  parse    <format> <filename>   Extract information out of compressed JSON."
echo  "  stats    <request>             Provide summary information about a search."                 
echo  "  search   <request>             Search the Internet database from Copycat."
echo  "  domain   <domain>              Show all available information for a domain."
echo  "  formats                        Show all available Copycat parse formats."
echo  "  stream                         Stream Copycat search results in real-time."
echo  "  radar                          The real-time map of Copycat search results."
echo  "  update                         Update Copycat Toolkit and API configuration."
echo  "  help                           Show all available Copycat Toolkit options."
echo    
exit
